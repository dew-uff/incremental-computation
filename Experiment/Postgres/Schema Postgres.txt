-- Configurações gerais para o PostgreSQL
SET TIME ZONE 'UTC';

-- Tabela para hierarquia CNAE
CREATE TABLE CodCnae (
    COD_SEC_CNAE CHAR(1) NOT NULL,
    COD_DIV_CNAE CHAR(2) NOT NULL,
    COD_GRUPO_CNAE CHAR(3) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) PRIMARY KEY
);

-- Tabela para hierarquia de Natureza Jurídica
CREATE TABLE CodNatJur (
    COD_NATJUR CHAR(1) PRIMARY KEY
);

INSERT INTO CodNatJur (COD_NATJUR) VALUES
('1'),
('2'),
('3');



-- Tabela para hierarquia de Municípios
CREATE TABLE CodMun (
    COD_REGIAO CHAR(1) NOT NULL,
    COD_UF CHAR(2) NOT NULL,
    COD_MUNICIPIO CHAR(5) NOT NULL,
    COD_UFMUN CHAR(7) PRIMARY KEY
);

-- Tabela FxPot
CREATE TABLE FxPot (
    COD_FX_POT INTEGER PRIMARY KEY,
    DESC_FX_POT TEXT NOT NULL
);

-- Inserção dos valores na tabela FxPot
INSERT INTO FxPot (COD_FX_POT, DESC_FX_POT) VALUES
(1, '0 a 4'),
(2, '5 a 9'),
(3, '10 a 19'),
(4, '20 a 29'),
(5, '30 a 49'),
(6, '50 a 99'),
(7, '100 a 249'),
(8, '250 a 499'),
(9, '500 ou mais');

-- Tabela ExecControl Normal
CREATE TABLE ExecContrNorm (
    COD_VER_EXEC SERIAL PRIMARY KEY,
    DATA_EXEC TIMESTAMP WITH TIME ZONE,
    N_TUPLE INTEGER,
    N_VALUES INTEGER,
    TIME_START TIMESTAMP WITH TIME ZONE,
    TIME_END TIMESTAMP WITH TIME ZONE,
    TIME_EXEC INTERVAL,
    COD_RESULT CHAR(1) CHECK (COD_RESULT IN ('0', '1'))
);

-- Tabela ExecControl Incremental
CREATE TABLE ExecContrInc (
    COD_VER_EXEC SERIAL PRIMARY KEY,
    DATA_EXEC TIMESTAMP WITH TIME ZONE,
    N_TUPLE INTEGER,
    N_VALUES INTEGER,
    TIME_START TIMESTAMP WITH TIME ZONE,
    TIME_END TIMESTAMP WITH TIME ZONE,
    TIME_EXEC INTERVAL,
    COD_RESULT CHAR(1) CHECK (COD_RESULT IN ('0', '1'))
);




-- Tabela Codigo do Cubo
CREATE TABLE CodCubo (
    COD_CUBE CHAR(4) PRIMARY KEY,
    COD_ROUTINE VARCHAR(255) NOT NULL
);



INSERT INTO CodCubo (COD_CUBE, COD_ROUTINE) VALUES
('0001', 'EstabInc.Cod_UF, EstabInc.Cod_Grupo_CNAE, EstabInc.Cod_Fx_Pot, EstabInc.Cod_NatJur'),
('0002', 'EstabInc.Cod_UFMUN, EstabInc.Cod_Div_CNAE, EstabInc.Cod_Fx_Pot'),
('0003', 'EstabInc.Cod_UFMUN, EstabInc.Cod_Classe_CNAE');


-- Tabelas EstabInc1 a EstabInc8


CREATE TABLE EstabInc1 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc2 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc3 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc4 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc5 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc6 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc7 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);

CREATE TABLE EstabInc8 (
    COD_SEQ CHAR(10) NOT NULL,
    COD_VERSAO_ESTAB INTEGER NOT NULL,
    COD_UFMUN CHAR(7) NOT NULL,
    COD_CLASSE_CNAE CHAR(5) NOT NULL,
    COD_NATJUR CHAR(1) NOT NULL,
    NUM_POA INTEGER,
    NUM_POT INTEGER,
    NUM_SAL NUMERIC(15, 2),
    DATA_INI TIMESTAMP WITH TIME ZONE NOT NULL,
    DATA_FIM TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY (COD_SEQ, COD_VERSAO_ESTAB),
    FOREIGN KEY (COD_CLASSE_CNAE) REFERENCES CodCnae (COD_CLASSE_CNAE),
    FOREIGN KEY (COD_NATJUR) REFERENCES CodNatJur (COD_NATJUR),
    FOREIGN KEY (COD_UFMUN) REFERENCES CodMun (COD_UFMUN)
);





DO $$
DECLARE
    i INTEGER;
BEGIN
    FOR i IN 1..8 LOOP
        EXECUTE format($fmt$
            CREATE TABLE AgregNorm%1$s (
                COD_VER_EXEC INTEGER NOT NULL REFERENCES ExecContrNorm%1$s (COD_VER_EXEC),
                COD_CUBE CHAR(4) REFERENCES CodCubo (COD_CUBE),
                CNAE CHAR(5),
                REGIAO CHAR(7),
                NATJUR CHAR(1),
                FXPOT CHAR(1),
                COUNT INTEGER,
                SUM_NUM_POA INTEGER,
                AVG_NUM_POA NUMERIC(15, 2),
                VARIANCE_POA NUMERIC(15, 2),
                SUM_NUM_POT INTEGER,
                AVG_NUM_POT NUMERIC(15, 2),
                VARIANCE_POT NUMERIC(15, 2),
                SUM_NUM_SAL NUMERIC(15, 2),
                AVG_NUM_SAL NUMERIC(15, 2),
                VARIANCE_SAL NUMERIC(15, 2),
                PRIMARY KEY (COD_VER_EXEC, COD_CUBE, CNAE, REGIAO, NATJUR, FXPOT)
            );
        $fmt$, i);

        EXECUTE format($fmt$
            CREATE TABLE AgregInc%1$s (
                COD_VER_EXEC INTEGER NOT NULL REFERENCES ExecContrInc%1$s (COD_VER_EXEC),
                COD_CUBE CHAR(4) REFERENCES CodCubo (COD_CUBE),
                CNAE CHAR(5) NOT NULL,
                REGIAO CHAR(7) NOT NULL,
                NATJUR CHAR(1) NOT NULL,
                FXPOT CHAR(1) NOT NULL,
                COUNT INTEGER,
                SUM_NUM_POA INTEGER,
                AVG_NUM_POA REAL,
                SUM_SQR_NUM_POA BIGINT,
                VARIANCE_POA REAL,
                SUM_NUM_POT INTEGER,
                AVG_NUM_POT REAL,
                SUM_SQR_NUM_POT BIGINT,
                VARIANCE_POT REAL,
                SUM_NUM_SAL REAL,
                AVG_NUM_SAL REAL,
                SUM_SQR_NUM_SAL DOUBLE PRECISION,
                VARIANCE_SAL REAL,
                PRIMARY KEY (COD_VER_EXEC, COD_CUBE, CNAE, REGIAO, NATJUR, FXPOT)
            );
        $fmt$, i);
    END LOOP;
END $$;




DO $$
DECLARE
    i INTEGER;
BEGIN
    FOR i IN 1..8 LOOP
        EXECUTE format($fmt$
            CREATE TABLE ExecContrNorm%1$s (
                COD_VER_EXEC SERIAL PRIMARY KEY,
                DATA_EXEC TIMESTAMP WITH TIME ZONE,
                N_TUPLE INTEGER,
                N_VALUES INTEGER,
                TIME_START TIMESTAMP WITH TIME ZONE,
                TIME_END TIMESTAMP WITH TIME ZONE,
                TIME_EXEC INTERVAL,
                COD_RESULT CHAR(1) CHECK (COD_RESULT IN ('0', '1'))
            );
        $fmt$, i);

        EXECUTE format($fmt$
            CREATE TABLE ExecContrInc%1$s (
                COD_VER_EXEC SERIAL PRIMARY KEY,
                DATA_EXEC TIMESTAMP WITH TIME ZONE,
                N_TUPLE INTEGER,
                N_VALUES INTEGER,
                TIME_START TIMESTAMP WITH TIME ZONE,
                TIME_END TIMESTAMP WITH TIME ZONE,
                TIME_EXEC INTERVAL,
                COD_RESULT CHAR(1) CHECK (COD_RESULT IN ('0', '1'))
            );
        $fmt$, i);
    END LOOP;
END $$;

